import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { detectAiContent } from '../services/humanizeApi';
import { isLoggedIn } from '../services/api';
import '../styles/AiDetector.css';

const AiDetector = () => {
  const [text, setText] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [result, setResult] = useState(null);
  const navigate = useNavigate();

  // Check if user is logged in
  useEffect(() => {
    if (!isLoggedIn()) {
      navigate('/login', { state: { from: '/detect' } });
    }
  }, [navigate]);

  // Handle text input change
  const handleInputChange = (e) => {
    setText(e.target.value);
    
    // Reset results when input changes
    if (result) {
      setResult(null);
    }
    if (error) {
      setError('');
    }
  };

  // Handle form submission
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Validate input
    if (!text || text.trim() === '') {
      setError('Please enter some text to analyze');
      return;
    }
    
    setLoading(true);
    setError('');
    setResult(null);

    try {
      // Detect if the text appears to be AI-generated
      const detection = await detectAiContent(text);
      setResult(detection);
    } catch (err) {
      console.error('Error during AI detection:', err);
      setError(err.message || 'An error occurred while analyzing the text');
    } finally {
      setLoading(false);
    }
  };

  // Navigate to humanize page with the current text
  const humanizeThisText = () => {
    if (!text) return;
    
    // Store the text in session storage to pass it to the humanize page
    sessionStorage.setItem('textToHumanize', text);
    navigate('/humanize');
  };

  return (
    <div className="detector-container">
      <div className="detector-card">
        <h1>AI Content Detector</h1>
        <p className="detector-description">
          Check if your content will be flagged as AI-generated by detection tools.
        </p>

        {error && <div className="error-message">{error}</div>}

        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="text-to-analyze">Text to Analyze</label>
            <textarea
              id="text-to-analyze"
              value={text}
              onChange={handleInputChange}
              placeholder="Paste your text here to check if it will be detected as AI-generated..."
              rows={10}
              disabled={loading}
            />
          </div>

          <button 
            type="submit" 
            className="analyze-button"
            disabled={loading || !text}
          >
            {loading ? 'Analyzing...' : 'Analyze Text'}
          </button>
        </form>

        {result && (
          <div className="detection-result">
            <h2>Detection Results</h2>
            
            <div className="detection-meters">
              <div className="meter-container">
                <div className="meter-label">AI Probability</div>
                <div className="meter">
                  <div 
                    className="meter-bar" 
                    style={{ 
                      width: `${result.ai_score}%`, 
                      backgroundColor: `rgba(255, 0, 0, ${result.ai_score / 100})` 
                    }}
                  />
                </div>
                <div className="meter-value">{result.ai_score}%</div>
              </div>
              
              <div className="meter-container">
                <div className="meter-label">Human Probability</div>
                <div className="meter">
                  <div 
                    className="meter-bar" 
                    style={{ 
                      width: `${result.human_score}%`, 
                      backgroundColor: `rgba(0, 255, 0, ${result.human_score / 100})` 
                    }}
                  />
                </div>
                <div className="meter-value">{result.human_score}%</div>
              </div>
            </div>

            <div className="detailed-analysis">
              <h3>Detailed Analysis</h3>
              
              <div className="analysis-item">
                <div className="analysis-label">Formal Language:</div>
                <div className="analysis-meter">
                  <div 
                    className="analysis-bar" 
                    style={{ width: `${result.analysis.formal_language}%` }}
                  />
                </div>
                <div className="analysis-value">{result.analysis.formal_language}%</div>
              </div>
              
              <div className="analysis-item">
                <div className="analysis-label">Repetitive Patterns:</div>
                <div className="analysis-meter">
                  <div 
                    className="analysis-bar" 
                    style={{ width: `${result.analysis.repetitive_patterns}%` }}
                  />
                </div>
                <div className="analysis-value">{result.analysis.repetitive_patterns}%</div>
              </div>
              
              <div className="analysis-item">
                <div className="analysis-label">Sentence Uniformity:</div>
                <div className="analysis-meter">
                  <div 
                    className="analysis-bar" 
                    style={{ width: `${result.analysis.sentence_uniformity}%` }}
                  />
                </div>
                <div className="analysis-value">{result.analysis.sentence_uniformity}%</div>
              </div>
            </div>

            <div className="detection-recommendation">
              {result.ai_score > 70 ? (
                <div className="high-risk">
                  <h3><i className="warning-icon">⚠️</i> High Risk of Detection</h3>
                  <p>This content is likely to be flagged as AI-generated. Consider using our Humanize tool to reduce AI markers.</p>
                  <button onClick={humanizeThisText} className="humanize-this-button">
                    Humanize This Text
                  </button>
                </div>
              ) : result.ai_score > 40 ? (
                <div className="medium-risk">
                  <h3><i className="warning-icon">⚠️</i> Medium Risk of Detection</h3>
                  <p>This content has some AI indicators that might be detected. Using our Humanize tool can help make it more natural.</p>
                  <button onClick={humanizeThisText} className="humanize-this-button">
                    Humanize This Text
                  </button>
                </div>
              ) : (
                <div className="low-risk">
                  <h3><i className="success-icon">✓</i> Low Risk of Detection</h3>
                  <p>This content appears natural and is unlikely to be flagged as AI-generated.</p>
                </div>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default AiDetector;
